{"version":3,"sources":["assets/about-us.png","assets/banner/profile.jpg","components/Navbar/Navbar.jsx","components/SiteAboutArea/AboutArea.jsx","components/SiteBanner/Banner.jsx","components/SiteMain/SiteMain.jsx","containers/Home/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","AboutArea","class","src","require","alt","Banner","href","SiteMain","Home","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kKAAAA,EAAOC,QAAU,IAA0B,sC,wCCA3CD,EAAOC,QAAU,IAA0B,qC,uHC+C5BC,EA5CA,WAEX,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,wCACX,kBAAC,IAAD,CAASA,UAAU,eAAeC,GAAG,IAArC,gBAGA,4BAAQD,UAAU,iBACdE,KAAK,SACLC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBACX,0BAAMP,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BQ,GAAG,aACzC,yBAAKR,UAAU,YACf,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,IAAjC,SAIJ,wBAAID,UAAU,mBACV,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,IAAjC,eAIJ,wBAAID,UAAU,mBACV,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,IAAjC,mBCJjBQ,G,MA5BG,WACd,OACI,6BACI,6BAASC,MAAM,cACX,yBAAKA,MAAM,mBACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,sBACP,yBAAKA,MAAM,eACP,yBAAKC,IAAKC,EAAQ,IAA8BC,IAAI,WAAWH,MAAM,gBAG7E,yBAAKA,MAAM,kCACP,wBAAIA,MAAM,uBACN,4CACA,4CAEJ,yBAAKA,MAAM,uBACP,uBAAGA,MAAM,QAAT,+DACA,uBAAGA,MAAM,QAAT,oDCSjBI,G,MA3BA,WACX,OACI,6BAASd,UAAU,eACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,wBAAIA,UAAU,cAAd,YACA,wBAAIA,UAAU,6BAAd,cACA,wBAAIA,UAAU,6BAAd,uBACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,6BACX,4BAAQE,KAAK,SACTF,UAAU,iDADd,UAEA,uBAAGE,KAAK,SAASF,UAAU,6CACvBe,KAAK,kCADT,iBAKZ,yBAAKf,UAAU,mCACX,yBAAKW,IAAKC,EAAQ,IAAoCC,IAAI,aAAab,UAAU,oBCP1FgB,EAXE,WACb,OACI,6BACI,yBAAKhB,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,SCKDiB,G,MATF,WACT,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,SCKGC,MAVf,WACE,OACE,yBAAKlB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmB,KAAK,UAAUC,OAAK,EAACC,UAAWJ,OCI3BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ed6719e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about-us.a0716c60.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.3b860365.jpg\";","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    // navegation of the website\r\n    return (\r\n        <div className=\"header_area\">\r\n            <div className=\"main-menu\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                    <NavLink className=\"navbar-brand\" to=\"\">\r\n                        Github-Bryan\r\n                    </NavLink>\r\n                    <button className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#navbarNav\"\r\n                        aria-controls=\"navbarNav\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <div className=\"mr-auto\"></div>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item active\">\r\n                                <NavLink className=\"nav-link\" to=\"\" >\r\n                                    Home\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <NavLink className=\"nav-link\" to=\"\" >\r\n                                    Portofolio\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <NavLink className=\"nav-link\" to=\"\" >\r\n                                    About-Me\r\n                                </NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport './style.css'\r\n\r\nconst AboutArea = () => {\r\n    return (\r\n        <div>\r\n            <section class=\"about-area\">\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-6 col-md-12\">\r\n                            <div class=\"about-image\">\r\n                                <img src={require(\"../../assets/about-us.png\")} alt=\"about-us\" class=\"img-fluid\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-12 about-title\">\r\n                            <h2 class=\"text-uppercase pt-5\">\r\n                                <span>JavaScript</span>\r\n                                <span>Developer</span>\r\n                            </h2>\r\n                            <div class=\"paragraph py-4 w-75\">\r\n                                <p class=\"para\">I have a greater love for Nodejs - PostgreSQl - MongooseDB.</p>\r\n                                <p class=\"para\">I would like to be a full-stack someday.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutArea\r\n","import React from 'react'\r\nimport './style.css'\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <section className=\"site-banner\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-12 site-title\">\r\n                        <h3 className=\"title-text\">Hi there</h3>\r\n                        <h1 className=\"title-text text-uppercase\">I am Bryan</h1>\r\n                        <h4 className=\"title-text text-uppercase\">engineering student</h4>\r\n                        <div className=\"site-buttons\">\r\n                            <div className=\"d-flex flex-row flex-wrap\">\r\n                                <button type=\"button\"\r\n                                    className=\"btn button primary-button mr-4 text-uppercase\">hireme</button>\r\n                                <a type=\"button\" className=\"btn button secondary-button text-uppercase\"\r\n                                    href=\"https://github.com/bryanedward\">Repository</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-md-12 banner-image\">\r\n                        <img src={require('../../assets/banner/profile.jpg')} alt=\"banner-img\" className=\"img-fluid\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react'\r\nimport AboutArea from '../SiteAboutArea/AboutArea'\r\nimport Banner from '../SiteBanner/Banner'\r\n\r\nconst SiteMain = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"site-main\">\r\n                <Banner />\r\n                <AboutArea />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SiteMain\r\n","import React from 'react'\r\nimport Navbar from '../../components/Navbar/Navbar'\r\nimport SiteMain from '../../components/SiteMain/SiteMain'\r\nimport './style.css'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <SiteMain />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from './containers/Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"/webapp\" exact component={Home} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}